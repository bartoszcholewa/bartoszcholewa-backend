name: Build Docker Container & Push to GitHub Registry

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test_django_job:
    name: Test Django before build
    uses: bartoszcholewa/bartoszcholewa-backend/.github/workflows/test-django.yaml@main
  build_push_deploy_image_job:
    name: Build, push and deploy
    runs-on: ubuntu-latest
    needs: [ test_django_job ]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./src
          push: true
          tags: ghcr.io/bartoszcholewa/bartoszcholewa-backend:latest,ghcr.io/bartoszcholewa/bartoszcholewa-backend:${{ steps.vars.outputs.sha_short }}

      - name: Create kubeconfig
        run: |
          mkdir ${HOME}/.kube
          echo ${{ secrets.KUBE_CONFIG_DATA }} | base64 --decode > ${HOME}/.kube/config

      - name: Update deployment secrets
        run: |
          cat << EOF >> src/.env.prod
          
          # System
          GIT_COMMIT=${{ steps.vars.outputs.sha_short }}
          RUN_NUMBER=${GITHUB_RUN_NUMBER}
          
          # Django
          DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
          DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }}
          DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
          DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }}
          DEBUG=${{ secrets.DEBUG }}
          DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }}
          CSRF_TRUSTED_ORIGINS=${{ secrets.CSRF_TRUSTED_ORIGINS }}
          
          # Database
          SQL_ENGINE=${{ secrets.SQL_ENGINE }}
          SQL_DATABASE=${{ secrets.SQL_DATABASE }}
          SQL_USER=${{ secrets.SQL_USER }}
          SQL_PASSWORD=${{ secrets.SQL_PASSWORD }}
          SQL_HOST=${{ secrets.SQL_HOST }}
          SQL_PORT=${{ secrets.SQL_PORT }}
          
          # AWS
          USE_S3=True
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }}
          
          # REDIS
          REDIS_HOST=${{ secrets.REDIS_HOST }}
          REDIS_PORT=${{ secrets.REDIS_PORT }}
          
          EOF
          kubectl delete secret bartoszcholewa-secrets
          kubectl create secret generic bartoszcholewa-secrets --from-env-file=src/.env.prod

      - name: Update Deployment image
        run: |
          kubectl set image deployment/bartoszcholewa-app bartoszcholewa=ghcr.io/bartoszcholewa/bartoszcholewa-backend:${{ steps.vars.outputs.sha_short }}

      - name: Wait for rollout to finish
        run: |
          kubectl rollout status deployment/bartoszcholewa-app
          sleep 5

      - name: Migrate Database Command
        run: |
          export SINGLE_POD_NAME=$(kubectl get pod -l app=bartoszcholewa -o jsonpath="{.items[0].metadata.name}")
          echo $SINGLE_POD_NAME
          kubectl get pods
          kubectl exec -it $SINGLE_POD_NAME -- sh -c "python manage.py migrate --noinput"

      - name: Collect Static
        run: |
          export SINGLE_POD_NAME=$(kubectl get pod -l app=bartoszcholewa -o jsonpath="{.items[0].metadata.name}")
          kubectl exec -it $SINGLE_POD_NAME -- sh -c "python manage.py collectstatic --noinput"